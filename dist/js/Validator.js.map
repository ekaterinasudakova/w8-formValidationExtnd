{"version":3,"sources":["Validator.js"],"names":["Validator","selector","$field","document","querySelector","console","warn","$errorContainer","createElement","classList","add","parentElement","appendChild","errors","addEventListener","validate","bind","log","value","push","setTimeout","showErrors","length","style","borderColor","innerHTML","forEach","error"],"mappings":";;;;;;IAAMA,S;AACF,uBAAYC,QAAZ,EAAqB;AAAA;;AAEjB;AACA,aAAKC,MAAL,GAAcC,SAASC,aAAT,CAAuBH,QAAvB,CAAd;AACA,YAAG,CAAC,KAAKC,MAAT,EAAgB;AACZG,oBAAQC,IAAR,4CAAuDL,QAAvD;AACA,mBAAO,KAAP;AACH;;AAED;AACA,aAAKM,eAAL,GAAuBJ,SAASK,aAAT,CAAuB,KAAvB,CAAvB;AACA,aAAKD,eAAL,CAAqBE,SAArB,CAA+BC,GAA/B,CAAmC,eAAnC;AACA,aAAKR,MAAL,CAAYS,aAAZ,CAA0BC,WAA1B,CAAsC,KAAKL,eAA3C;;AAGA;AACA,aAAKM,MAAL,GAAc,EAAd;;AAEA;AACA;AACA;;AAEA;AACA,aAAKX,MAAL,CAAYY,gBAAZ,UAAsC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAtC;AACA,aAAKd,MAAL,CAAYY,gBAAZ,SAAqC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAArC;AACH;;AAED;;;AAGA;;;;;mCACU;AACNX,oBAAQY,GAAR,gBAA0B,KAAKf,MAAL,CAAYgB,KAAtC;AACA;;AAEA,iBAAKL,MAAL,GAAc,EAAd;;AAEA;AACA;AACA,gBAAG,KAAKX,MAAL,CAAYgB,KAAf,EAAqB;AACjB;AACH,aAFD,MAEO;AACH,qBAAKL,MAAL,CAAYM,IAAZ,CAAiB,6BAAjB;AACH;;AAED;AACA;AACA;AACA;AACAC,uBAAW,KAAKC,UAAL,CAAgBL,IAAhB,CAAqB,IAArB,CAAX,EAAuC,CAAvC;AACH;;AAGG;;;;qCACY;AAAA;;AACR,gBAAG,KAAKH,MAAL,CAAYS,MAAf,EAAsB;AAClB,qBAAKpB,MAAL,CAAYqB,KAAZ,CAAkBC,WAAlB;AACA,qBAAKjB,eAAL,CAAqBkB,SAArB,GAAiC,EAAjC;AACA,qBAAKZ,MAAL,CAAYa,OAAZ,CAAoB,UAACC,KAAD,EAAS;AACzB,0BAAKpB,eAAL,CAAqBkB,SAArB,IAAkC,QAAQE,KAAR,GAAgB,MAAlD;AACH,iBAFD;AAGH,aAND,MAMO;AACH,qBAAKzB,MAAL,CAAYqB,KAAZ,CAAkBC,WAAlB;AACA,qBAAKjB,eAAL,CAAqBkB,SAArB,GAAiC,EAAjC;AACH;AACJ","file":"Validator.js","sourcesContent":["class Validator{\n    constructor(selector){\n\n        //find the field, show an error if it's not available\n        this.$field = document.querySelector(selector);\n        if(!this.$field){\n            console.warn(`Couldn't find an element with selector`, selector)\n            return false\n        }\n\n        //make element to show the errors in\n        this.$errorContainer = document.createElement('div');\n        this.$errorContainer.classList.add('error-message');\n        this.$field.parentElement.appendChild(this.$errorContainer);\n\n\n        //keep track of errors\n        this.errors = [];\n\n        //add event listener to call this.validate\n        //but overrule its _this_ logic, and force its\n        //_this_ to be the Validate class instance\n\n        //this gets redefined every thime you have timeout, addevent, and ajax, foreach\n        this.$field.addEventListener(`keyup`, this.validate.bind(this))\n        this.$field.addEventListener(`blur`, this.validate.bind(this))\n    }\n\n    //this is how you make function or method inside a class\n\n\n    //RULES\n    validate(){\n        console.log(`validate!!!`,this.$field.value)\n        //not selector bc that's just the string w the []\n\n        this.errors = [];\n       \n        //strings are truthy if they have something in them and falsy if they don't\n        //so this validates that it's a string\n        if(this.$field.value){\n            //do nothing\n        } else {\n            this.errors.push(\"You must fill out the field\");\n        }\n\n        //this is a HACK\n        //putting it in a 0ms timeout just moves it to the end of the\n        //call stack, after any and all parent/child/grandchild\n        // of validate\n        setTimeout(this.showErrors.bind(this), 0)\n    }\n    \n\n        //STYLING\n        showErrors(){\n            if(this.errors.length){\n                this.$field.style.borderColor = `red`;\n                this.$errorContainer.innerHTML = \"\";\n                this.errors.forEach((error)=>{\n                    this.$errorContainer.innerHTML += '<p>' + error + '</p>';\n                }) \n            } else {\n                this.$field.style.borderColor = `green`;\n                this.$errorContainer.innerHTML = \"\";\n            }\n        }\n\n}\n"]}