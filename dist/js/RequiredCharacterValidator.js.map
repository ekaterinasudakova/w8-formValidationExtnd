{"version":3,"sources":["RequiredCharacterValidator.js"],"names":["RequiredCharacterValidator","selector","requiredCharacters","console","log","sclCharaFound","forEach","char","$field","value","includes","errors","push","Validator"],"mappings":";;;;;;;;;;;;AACA;;IAEMA,0B;;;AAEF,wCAAYC,QAAZ,EAAsBC,kBAAtB,EAAyC;AAAA;;AACpB;AADoB,4JAC/BD,QAD+B;;AAErCE,gBAAQC,GAAR;AACA;AACA;;AAEA,cAAKF,kBAAL,GAA0BA,kBAA1B;;AANqC;AAQxC;;AAED;;;;;mCACU;AAAA;;AACN;;AAGA,gBAAIG,gBAAgB,KAApB;AACD,iBAAKH,kBAAL,CAAwBI,OAAxB,CAAgC,UAACC,IAAD,EAAU;AACtC,oBAAG,OAAKC,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2BH,IAA3B,CAAH,EAAoC;AAChCF,oCAAgB,IAAhB;AACH;AACJ,aAJD;AAKC,gBAAG,CAACA,aAAJ,EAAkB;AACd,qBAAKM,MAAL,CAAYC,IAAZ;AACH;AACJ;;;;EA1BoCC,S","file":"RequiredCharacterValidator.js","sourcesContent":["\n//extended class is same as class but you can overrule methods + functions besides constructor=\n\nclass RequiredCharacterValidator extends Validator {\n\n    constructor(selector, requiredCharacters){\n        super(selector); // call constructor in Validator()\n        console.log(`constructor from RequiredCharacterValidator`)\n        // console.log(`characters: `, characterArray);\n        // console.log(`this.characters: `, this.characterArray)\n\n        this.requiredCharacters = requiredCharacters;\n\n    }\n\n    //RULES FOR EMAIL ONLY\n    validate(){\n        super.validate();\n\n\n        let sclCharaFound = false;\n       this.requiredCharacters.forEach((char) => {\n           if(this.$field.value.includes(char)){\n               sclCharaFound = true;\n           }\n       })\n        if(!sclCharaFound){\n            this.errors.push(`This field is missing special characters`);\n        }        \n    }\n\n}"]}