{"version":3,"sources":["SpecialCharacterValidator.js"],"names":["SpecialCharacterValidator","selector","console","log","sclChara","$field","value","i","length","indexOf","errors","push","Validator"],"mappings":";;;;;;;;;;;;AACA;;IAEMA,yB;;;AAEF,uCAAYC,QAAZ,EAAqB;AAAA;;AACA;AADA,0JACXA,QADW;;AAEjBC,gBAAQC,GAAR;AACA;AACA;;AAJiB;AAMpB;;AAED;;;;;mCACU;AACN;;AAEA,gBAAIC,WAAW,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,CAAf;AACAF,oBAAQC,GAAR,wBAAmC,KAAKE,MAAL,CAAYC,KAA/C;;AAEA,iBAAI,IAAIC,IAAI,CAAZ,EAAeA,KAAKH,SAASI,MAA7B,EAAqCD,GAArC,EAAyC;AACrC;AACA,oBAAI,KAAKF,MAAL,CAAYC,KAAb,CAAoBG,OAApB,CAA4BL,SAASG,CAAT,CAA5B,KAA4C,CAAC,CAAhD,EAAkD;AAC9C,yBAAKG,MAAL,CAAYC,IAAZ;AACH;AACJ;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIH;;;;EAnDmCC,S","file":"SpecialCharacterValidator.js","sourcesContent":["\n//extended class is same as class but you can overrule methods + functions besides constructor=\n\nclass SpecialCharacterValidator extends Validator {\n\n    constructor(selector){\n        super(selector); // call constructor in Validator()\n        console.log(`constructor from SpecialCharacterValidator`)\n        // console.log(`characters: `, characterArray);\n        // console.log(`this.characters: `, this.characterArray)\n\n    }\n\n    //RULES FOR EMAIL ONLY\n    validate(){\n        super.validate();\n\n        let sclChara = ['!','@','#','$','%','^','&','*'];\n        console.log(`this.$field.value: `, this.$field.value);\n\n        for(var i = 0; i != sclChara.length; i++){\n            // var sclChara = sclChara[i];\n            if((this.$field.value).indexOf(sclChara[i]) != -1){\n                this.errors.push(`Your password has at least one special character!`);\n            }\n        }\n\n        // if(this.$field.value.includes(`!`)){\n        //     this.errors.push(`Remove the ! from your password!`);\n        // }\n        // if(this.$field.value.includes(`@`)){\n        //     this.errors.push(`Remove the @ from your password!`);\n        // }\n        // if(this.$field.value.includes(`#`)){\n        //     this.errors.push(`Remove the # from your password!`);\n        // }\n        // if(this.$field.value.includes(`$`)){\n        //     this.errors.push(`Remove the $ from your password!`);\n        // }\n        // if(this.$field.value.includes(`%`)){\n        //     this.errors.push(`Remove the % from your password!`);\n        // }\n        // if(this.$field.value.includes(`^`)){\n        //     this.errors.push(`Remove the ^ from your password!`);\n        // }\n        // if(this.$field.value.includes(`&`)){\n        //     this.errors.push(`Remove the & from your password!`);\n        // }\n        // if(this.$field.value.includes(`*`)){\n        //     this.errors.push(`Remove the * from your password!`);\n        // }\n\n\n        \n    }\n\n}"]}