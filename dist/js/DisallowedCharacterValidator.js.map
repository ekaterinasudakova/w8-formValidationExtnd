{"version":3,"sources":["DisallowedCharacterValidator.js"],"names":["DisallowedCharacterValidator","selector","characterArray","console","log","i","length","character","$field","value","includes","errors","push","Validator"],"mappings":";;;;;;;;;;;;AACA;;IAEMA,4B;;;AAEF,0CAAYC,QAAZ,EAAsBC,cAAtB,EAAqC;AAAA;;AAChB;AADgB,gKAC3BD,QAD2B;;AAEjCE,gBAAQC,GAAR;AACA,cAAKF,cAAL,GAAsBA,cAAtB;AACA;AACA;;AALiC;AAOpC;;AAED;;;;;mCACU;AACN;;AAEA,iBAAI,IAAIG,IAAE,CAAV,EAAaA,IAAI,KAAKH,cAAL,CAAoBI,MAArC,EAA6CD,GAA7C,EAAiD;AAC7C;AACA,oBAAIE,YAAY,KAAKL,cAAL,CAAoBG,CAApB,CAAhB;AACA;AACA,oBAAG,KAAKG,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2BH,SAA3B,CAAH,EAAyC;AACrCJ,4BAAQC,GAAR,CAAYG,SAAZ;AACA,yBAAKI,MAAL,CAAYC,IAAZ;AACH;AACJ;AAEJ;;;;EAzBsCC,S","file":"DisallowedCharacterValidator.js","sourcesContent":["\n//extended class is same as class but you can overrule methods + functions besides constructor=\n\nclass DisallowedCharacterValidator extends Validator {\n\n    constructor(selector, characterArray){\n        super(selector); // call constructor in Validator()\n        console.log(`constructor from DisallowedCharacterValidator`)\n        this.characterArray = characterArray;\n        // console.log(`characters: `, characterArray);\n        // console.log(`this.characters: `, this.characterArray)\n\n    }\n\n    //RULES FOR EMAIL ONLY\n    validate(){\n        super.validate();\n\n        for(var i=0; i < this.characterArray.length; i++){\n            // console.log(this.characterArray[i]);\n            let character = this.characterArray[i];\n            // console.log(character);\n            if(this.$field.value.includes(character)){\n                console.log(character)\n                this.errors.push(`Remove disallowed character(s) from your password`);\n            }\n        }\n        \n    }\n\n}"]}